name: Release

on:
  workflow_dispatch:  # Trigger manually from GitHub UI

jobs:
  release:
    permissions:
      contents: write  # Allow write access to release assets
      issues: write
      pull-requests: write
    runs-on: ubuntu-latest  # You can change this to windows-latest if needed

    steps:
      # 1. Checkout the repository
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full commit history
          persist-credentials: false  # Don't persist credentials for later use

      # 2. Setup Node.js
      - uses: actions/setup-node@v4
        with:
          node-version: '20'  # You can change this if your project needs another Node.js version

      # 3. Install dependencies
      - run: npm ci  # Clean install (faster and more reliable than npm install)

      # 4. Build your project (assumes your build process is in the 'build' script)
      - run: npm run build  # Ensure this produces both dist/chrome and dist/firefox

      # 5. Get the Release Token (if you're using an external app for managing releases)
      - name: Get Release Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v3
        with:
          application_id: ${{ secrets.RELEASE_APP_ID }}  # Store application ID in Secrets
          application_private_key: ${{ secrets.RELEASE_APP_CERT }}  # Store the private key in Secrets

      # 6. Create the release and upload the assets to GitHub Releases
      - name: Create GitHub Release
        run: |
          release_tag="v$(date +'%Y%m%d%H%M%S')"  # Or use a git tag, e.g., $(git describe --tags)
          gh release create $release_tag dist/chrome/* dist/firefox/* --title "New Release" --notes "Release of the Chrome and Firefox extensions."
        env:
          GITHUB_TOKEN: ${{ steps.get_workflow_token.outputs.token }}  # Use the token from the previous step
