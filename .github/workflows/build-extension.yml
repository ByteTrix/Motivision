name: Release

on:
  push:
    tags:
      - 'v*'  # Trigger on any tag that starts with 'v' (e.g., v1.0.0, v1.1.0)

jobs:
  release:
    permissions:
      contents: write  # Allow write access to release assets
      issues: write
      pull-requests: write
    runs-on: windows-latest  # Use Windows environment for the job

    steps:
      # 1. Checkout the repository
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full commit history
          persist-credentials: false  # Don't persist credentials for later use

      # 2. Setup Node.js
      - uses: actions/setup-node@v4
        with:
          node-version: '20'  # Use the appropriate Node.js version for your project

      # 3. Install dependencies
      - run: npm ci  # Clean install (faster and more reliable than npm install)

      # 4. Build your project (assumes your build process is in the 'build' script)
      - run: npm run build  # Ensure this produces both dist/chrome and dist/firefox

      # 5. Get the Release Token (if you're using an external app for managing releases)
      - name: Get Release Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v3
        with:
          application_id: ${{ secrets.RELEASE_APP_ID }}  # Store application ID in Secrets
          application_private_key: ${{ secrets.RELEASE_APP_CERT }}  # Store the private key in Secrets

      # 6. Create GitHub Release and upload assets
      - name: Create GitHub Release
        run: |
          release_tag="${GITHUB_REF#refs/tags/}"  # Extract the tag name
          gh release create $release_tag dist/chrome/* dist/firefox/* --title "New Release" --notes "Release of the Chrome and Firefox extensions."
        env:
          GITHUB_TOKEN: ${{ steps.get_workflow_token.outputs.token }}  # Use the token from the previous step
