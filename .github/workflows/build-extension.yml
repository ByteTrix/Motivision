name: Pre-Release Motivision Extension

permissions:
  contents: write
  actions: read

on:
  workflow_dispatch: # Manual trigger

jobs:
  build-runspace:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          npm install
          
      - name: Set Version to Today's Date
        id: extract_version
        run: |
          $version = (Get-Date -Format "yy.MM.dd")
          echo "VERSION=$version" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Create Directories for Chrome and Firefox
        run: |
          New-Item -ItemType Directory -Force -Path dist\chrome
          New-Item -ItemType Directory -Force -Path dist\firefox
        shell: pwsh

      - name: Copy Files to Chrome and Firefox Folders
        run: |
          Copy-Item -Recurse -Path src\* -Destination dist\chrome
          Copy-Item -Recurse -Path src\* -Destination dist\firefox
        shell: pwsh

      - name: Rename manifest files for Chrome and Firefox
        run: |
          # Rename for Chrome
          Rename-Item -Path dist\chrome\manifest.chrome.json -NewName dist\chrome\manifest.json
          # Rename for Firefox
          Rename-Item -Path dist\firefox\manifest.firefox.json -NewName dist\firefox\manifest.json
        shell: pwsh

      - name: Upload Chrome Extension as artifact
        uses: actions/upload-artifact@v4
        with:
          name: chrome-extension
          path: ./dist/chrome

      - name: Upload Firefox Extension as artifact
        uses: actions/upload-artifact@v4
        with:
          name: firefox-extension
          path: ./dist/firefox

      - name: Generate Release Notes
        id: generate_notes
        uses: release-drafter/release-drafter@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          config-name: release-drafter.yml
          version: ${{ env.VERSION }}

      - name: Create and Upload Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: Pre-Release ${{ env.VERSION }}
          body: |
            ${{ steps.generate_notes.outputs.body }}

            ![GitHub Downloads (specific asset, specific tag)](https://img.shields.io/github/downloads/Kxvin/motivision/${{ env.VERSION }}/chrome-extension)
            ![GitHub Downloads (specific asset, specific tag)](https://img.shields.io/github/downloads/Kxvin/motivision/${{ env.VERSION }}/firefox-extension)
          append_body: false
          files: ./dist/chrome, ./dist/firefox  # Upload both Chrome and Firefox builds
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
